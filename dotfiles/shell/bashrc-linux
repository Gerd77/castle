# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions

# User dependent .bashrc file
# Shell Options
# #############

# See man bash for more options...

# Don't wait for job termination notification
# set -o notify

# Don't use ^D to exit
# set -o ignoreeof

# Use case-insensitive filename globbing
shopt -s nocaseglob

# Make bash append rather than overwrite the history on disk
shopt -s histappend

# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apaache would find /var/log/apache
shopt -s cdspell

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Completion options
# ##################

# These completion tuning parameters change the default behavior of bash_completion:

# Define to access remotely checked-out files over passwordless ssh for CVS
# COMP_CVS_REMOTE=1

# Define to avoid stripping description in --option=description of './configure --help'
# COMP_CONFIGURE_HINTS=1

# Define to avoid flattening internal contents of tar files
# COMP_TAR_INTERNAL_PATHS=1


# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
    ;;
*)
    ;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

# History Options
# ###############
# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth
export HISTFILE=/home/sta/Strongbox/.bash_history
export HISTFILESIZE=1000000000
export HISTSIZE=100000000

# Don't put duplicate lines in the history.
# export HISTCONTROL="ignoredups"

# Ignore some controlling instructions
export HISTIGNORE="[   ]*:&:bg:fg:exit"

#if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#else
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#fi
#unset color_prompt force_color_prompt

# powerline-bash
#function _update_ps1()
#{
#   export PS1="$(~/bin/powerline-bash.py $?)"
#}
#export PROMPT_COMMAND="_update_ps1"

function prompt_command() {
	# display git branch in prompt
	if [ "\$(type -t __git_ps1)" ]; then # if we're in a Git repo, show current branch
			BRANCH="\$(__git_ps1 '[ %s ] ')"
	fi
	local TIME="\t"
	local USER_HOST="\u@\h"
	local PATH="\w"
	#local TIME="\[\e]0;\w\a\]\n\t"
	#local USER_HOST="\[\e[32m\]\u@\h"
	#local PATH="\[\e[33m\]\w\[\e[0m\]"
	# return color to Terminal setting for text color
	local DEFAULT="\[\e[0;39m\]"
	export PS1="\n${TIME} ${USER_HOST} ${PATH}\n${BRANCH}${DEFAULT}$ "
}
# Whenever displaying the prompt, write the previous line to disk (-a) and read
# the new line into the history list (-n)
export PROMPT_COMMAND="history -a; history -n; prompt_command; ${PROMPT_COMMAND}"

# Aliases
# #######

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# Functions
# #########

# Some example functions
# function settitle() { echo -ne "\e]2;$@\a\e]1;$@\a"; }

export GROOVY_HOME=${HOME}/Tools/groovy
export GRAILS_HOME=${HOME}/Tools/grails
export SCALA_HOME=${HOME}/Tools/scala
export ANDROID_HOME=${HOME}/Tools/android
export ASPECTJ_HOME=${HOME}/Tools/aspectj
export SCALA_HOME=${HOME}/Tools/scala
export PLAY_HOME=${HOME}/Tools/play
export MVN_HOME=${HOME}/Tools/maven

export CMVC_AUTH_METHOD=HOSTPW
export CMVC_BECOME=$LOGNAME
export CMVC_FAMILY=wplc@wplc.raleigh.ibm.com@5150
export CMVC_HOME=/tools/cmvc
export TEMP=${HOME}/tmp

export WPSYNC_BUILDTOOLS="buildtools_wp800_linux"
export WPSYNC_BUILDTOOLS_DESTINATION="/tools/buildtools_wp800/"

# If this shell is interactive, turn on programmable completion enhancements.
# Any completions you add in ~/.bash_completion are sourced last.
case $- in
  *i*) [[ -f /etc/bash_completion ]] && . /etc/bash_completion ;;
esac

if [[ $XTERM =~ xterm ]]; then
	xinput set-prop 11 'Evdev Middle Button Emulation' 1
fi
